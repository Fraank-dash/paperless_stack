# Docker Compose file for running paperless from the Docker Hub.
# This file contains everything paperless needs to run.
# Paperless supports amd64, arm and arm64 hardware.
#
# All compose files of paperless configure paperless in the following way:
#
# - Paperless is (re)started on system boot, if it was running before shutdown.
# - Docker volumes for storing data are managed by Docker.
# - Folders for importing and exporting files are created in the same directory
#   as this file and mounted to the correct folders inside the container.
# - Paperless listens on port 8010.
#
# In addition to that, this Docker Compose file adds the following optional
# configurations:
#
# - Instead of SQLite (default), PostgreSQL is used as the database server.
#
# To install and update paperless with this file, do the following:
#
# - Open portainer Stacks list and click 'Add stack'
# - Paste the contents of this file and assign a name, e.g. 'paperless'
# - Click 'Deploy the stack' and wait for it to be deployed
# - Open the list of containers, select paperless_webserver_1
# - Click 'Console' and then 'Connect' to open the command line inside the container
# - Run 'python3 manage.py createsuperuser' to create a user
# - Exit the console
#
# For more extensive installation and update instructions, refer to the
# documentation.

services:
  broker:
    image: docker.io/library/redis:7
    restart: unless-stopped
    volumes:
      - redisdata:/data

  db:
    image: docker.io/library/postgres:16
    restart: unless-stopped
    ports:
      - "5454:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    environment:
      # if not "paperless" for db user and pw -> change logindata or env too!
      POSTGRES_DB: ${PAPERLESS_POSTGRES_DB} 
      POSTGRES_USER: ${PAPERLESS_POSTGRES_USER}
      POSTGRES_PASSWORD: ${PAPERLESS_POSTGRES_PASSWORD}

  webserver:
    image: ghcr.io/paperless-ngx/paperless-ngx:latest
    restart: unless-stopped
    depends_on:
      - db
      - broker
      - gotenberg
      - tika
    ports:
      - "8010:8000"
    volumes:
      - data:/usr/src/paperless/data
      - media:/usr/src/paperless/media
      - ${PAPERLESS_EXPORT_DIR}:/usr/src/paperless/export # e.g. in my case "/home/fraank/Dokumente/paperless/export"
      - ${PAPERLESS_CONSUMPTION_DIR}:/usr/src/paperless/consume # e.g. in my case "/home/fraank/Dokumente/paperless/consume"
    environment:
      PAPERLESS_REDIS: redis://broker:6379
      PAPERLESS_DBHOST: db
      PAPERLESS_DBNAME: ${PAPERLESS_POSTGRES_DB} # default_dbname = paperless
      PAPERLESS_DBUSER: ${PAPERLESS_POSTGRES_USER} #default_dbuser = paperless
      PAPERLESS_DBPASS: ${PAPERLESS_POSTGRES_PASSWORD} # default_password = paperless
# ADMIN-USER+PASSWORD
      PAPERLESS_ADMIN_USER: ${PAPERLESS_NGX_ADMIN_USERNAME}
      PAPERLESS_ADMIN_PASSWORD: ${PAPERLESS_NGX_ADMIN_PASSWORD}
# STACKRELATED-PREFIX
      PAPERLESS_COOKIE_PREFIX: "dev"
# CONSUMER-INOTIFYDELAY
      PAPERLESS_CONSUMER_INOTIFY_DELAY: 2.0
# The UID and GID of the user used to run paperless in the container. Set this
# to your UID and GID on the host so that you have write access to the
# consumption directory.
      USERMAP_UID: 1000
      USERMAP_GID: 100
#random settings added because why not?
      PAPERLESS_FILENAME_FORMAT: "{{ document_type }}/{{ correspondent }}/{{ created_year }}{{ created_month }}{{ created_day }}_{{ correspondent }}_{{ title }}"
      LANG: de_DE.UTF-8
      LANGUAGE: de_DE.UTF-8
# Additional languages to install for text recognition, separated by a
# whitespace. Note that this is
# different from PAPERLESS_OCR_LANGUAGE (default=eng), which defines the
# language used for OCR.
# The container installs English, German, Italian, Spanish and French by
# default.
# See https://packages.debian.org/search?keywords=tesseract-ocr-&searchon=names&suite=buster
# for available languages.
      PAPERLESS_OCR_LANGUAGES: deu eng
# Adjust this key if you plan to make paperless available publicly. It should
# be a very long sequence of random characters. You don't need to remember it.
      #PAPERLESS_SECRET_KEY: change-me
# Use this variable to set a timezone for the Paperless Docker containers. If not specified, defaults to UTC.
      #PAPERLESS_TIME_ZONE: America/Los_Angeles
# The default language to use for OCR. Set this to the language most of your
# documents are written in.
      PAPERLESS_OCR_LANGUAGE: deu
      PAPERLESS_OCR_OUTPUT_TYPE: pdfa-3
# FRONTEND WORKERS
      PAPERLESS_WEBSERVER_WORKERS: 2 # more than enough for me, myself and i
# BACKEND WORKERS
      PAPERLESS_TASK_WORKERS: 2  # more than enough for me, myself and i
      PAPERLESS_THREADS_PER_WORKER: 2
# CONSUME_SUBDIRS_2_TAGS
      PAPERLESS_CONSUMER_RECURSIVE: true
      PAPERLESS_CONSUMER_SUBDIRS_AS_TAGS: true
# TIKA+GOTENBERG
      PAPERLESS_TIKA_ENABLED: 1
      PAPERLESS_TIKA_GOTENBERG_ENDPOINT: http://gotenberg:3000
      PAPERLESS_TIKA_ENDPOINT: http://tika:9998
# BARCODE
      # enable search for barcodes
      PAPERLESS_CONSUMER_ENABLE_BARCODES: true
      # enable setting ASN by ASN barcodes
      PAPERLESS_CONSUMER_ENABLE_ASN_BARCODE: true
      # switch from pyzbar to zxing for better recognition
      PAPERLESS_CONSUMER_BARCODE_SCANNER: ZXING
      
  gotenberg:
    image: docker.io/gotenberg/gotenberg:8.7
    restart: unless-stopped

    # The gotenberg chromium route is used to convert .eml files. We do not
    # want to allow external content like tracking pixels or even javascript.
    command:
      - "gotenberg"
      - "--chromium-disable-javascript=true"
      - "--chromium-allow-list=file:///tmp/.*"

  tika:
    image: docker.io/apache/tika:latest
    restart: unless-stopped

      
volumes:
  data:
  media:
  pgdata:
  redisdata:
